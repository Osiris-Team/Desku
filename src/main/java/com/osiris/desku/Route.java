package com.osiris.desku;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;

public class Route {
    /**
     * Must start with "/".
     */
    public String path;

    public Route(String path) {
        App.routes.add(this);

        this.path = path;
    }

    public Node loadContent() {
        return new TextNode("Extend the Route class and overwrite the loadContent() method" +
                " to display your custom content.");
    }

    public Document load() {
        Document html = Jsoup.parse("<!DOCTYPE html>\n" +
                "<!--\n" +
                "This file is auto-generated by Vaadin.\n" +
                "-->\n" +
                "\n" +
                "<html lang=\"en\">\n" +
                "<head>\n" +
                "  <meta charset=\"UTF-8\" />\n" +
                "  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n" +
                "  <style>\n" +
                "    body, #outlet {\n" +
                "      height: 100vh;\n" +
                "      width: 100%;\n" +
                "      margin: 0;\n" +
                "    }\n" +
                "  </style>\n" +
                "  <!-- index.ts is included here automatically (either by the dev server or during the build) -->\n" +
                "</head>\n" +
                "<body>\n" +
                "  <!-- This outlet div is where the views are rendered -->\n" +
                "  <div id=\"outlet\"></div>\n" +
                "</body>\n" +
                "</html>");
        Element content = html.getElementById("outlet");
        content.appendChild(loadContent());
        return html;
    }

    /**
     * Writes the in memory html, to an actual html file in the temp folder of the current user. <br>
     * If the path for this route is "/persons/john" for example then the html file will be created at: <br>
     * {@link App#tempDir}/{@link #hashCode()}/persons/john.html <br>
     * Note that the hash code is in hex format.
     *
     * @return the generated html file.
     */
    public File writeToTempFile() throws IOException {
        File file = new File(App.tempDir + "/" + Integer.toHexString(hashCode())
                + (path.equals("/") ? "/root.html" : (path + ".html")));
        Document html = load();
        file.getParentFile().mkdirs();
        if (!file.exists()) file.createNewFile();
        Files.write(file.toPath(), html.outerHtml().getBytes(StandardCharsets.UTF_8));
        return file;
    }

}
